name: Release

on:
  workflow_dispatch:
    inputs:
      tag-version:
        description: 'Tag as version'
        required: true
        default: '1-ea'
      pre-release:
        description: 'Pre-release? [true|false]'
        required: true
        default: 'true'

env:
  GITHUB_TOKEN: ${{ github.token }}
  VERSION: ${{ github.event.inputs.tag-version }}

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v2
      - name: 'Set up JDK'
        uses: actions/setup-java@v2
        with:
          java-version: 16
          distribution: 'zulu'
      - name: 'Bootstrap Bach'
        run: java --show-version bach/bootstrap.java
      - name: 'Build Bach ${{ env.VERSION }}'
        run: .bach/bin/bach --project-version ${{ env.VERSION }} build
      - name: 'Upload artifact ${{ github.event.repository.name }}-build-${{ env.VERSION }}'
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.event.repository.name }}-build-${{ env.VERSION }}
          path: |
            LICENSE
            .bach/workspace/logbook.md
            .bach/workspace/deploy
            .bach/workspace/documentation
            .bach/workspace/modules

  deploy-to-releases:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: 'Download build artifact ${{ env.VERSION }}'
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.event.repository.name }}-build-${{ env.VERSION }}
      - name: 'Release ${{ env.VERSION }}'
        uses: marvinpinto/action-automatic-releases@latest
        with:
          automatic_release_tag: ${{ env.VERSION }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: ${{ github.event.inputs.pre-release }}
          title: "Bach ${{ env.VERSION }}"
          files: .bach/workspace/modules/*.jar

  deploy-to-api-repository:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: 'Check out sormuras/api repository'
        uses: actions/checkout@v2
        with:
          repository: sormuras/api
          token: ${{ secrets.PAT }}
      - name: 'Download build artifact ${{ env.VERSION }}'
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.event.repository.name }}-build-${{ env.VERSION }}
      - name: 'Sync API documentation'
        run: |
          mkdir --parents ${{ github.event.repository.name }}/${{ env.VERSION }}
          rsync --archive --delete --verbose .bach/workspace/documentation/api/ ${{ github.event.repository.name }}/${{ env.VERSION }}
      - name: 'Check for modifications'
        id: diff
        run: |
          git status
          echo ::set-output name=modified::$(if [[ -z $(git status --porcelain) ]]; then echo 'false'; else echo 'true'; fi)
      - name: 'Commit and push changes'
        if: steps.diff.outputs.modified == 'true'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit --message 'Update API documentation of ${{ github.event.repository.name }} to ${{ env.VERSION }}'
          git push

  deploy-to-packages:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: 'Download build artifact ${{ env.VERSION }}'
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.event.repository.name }}-build-${{ env.VERSION }}
      - name: 'Set up Maven (GitHub)'
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'zulu'
      - name: 'Deploy to https://github.com/sormuras/bach/packages'
        env:
          GITHUB_TOKEN: ${{ github.token }}
          DEPLOY: '--batch-mode --no-transfer-progress org.apache.maven.plugins:maven-deploy-plugin:3.0.0-M1:deploy-file'
          REPOSITORY: '-DrepositoryId=github -Durl=https://maven.pkg.github.com/sormuras/bach'
        run: for f in .bach/workspace/deploy/maven/*.files ; do mvn ${DEPLOY} ${REPOSITORY} $(cat ${f}) ; done
